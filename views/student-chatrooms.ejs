<!DOCTYPE html>
<html>

<head>
    <title>Chatroom</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Include Bootstrap Icons (optional) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        /* General page styling */
        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
            font-family: 'YourExistingFont', sans-serif;
            /* Use the same font as Student Dashboard */
            background-color: #f8f9fa;
        }

        .chat-container {
            display: flex;
            height: 100vh;
            width: 100vw;
            background-color: white;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .user-list {
            width: 250px;
            background-color: #f7f7f7;
            border-right: 1px solid #ddd;
            overflow-y: auto;
        }

        .user-list h5 {
            background-color: #000000;
            color: white;
            padding: 20px;
            text-align: center;
            font-weight: bold;
            font-size: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .user {
            display: flex;
            align-items: center;
            margin: 10px 0;
            padding: 10px 15px;
            border-radius: 5px;
            transition: background-color 0.2s;
        }

        .user:hover {
            background-color: #e9ecef;
            cursor: pointer;
        }

        .user-icon {
            font-size: 1.5rem;
            margin-right: 10px;
        }

        .user-status {
            height: 10px;
            width: 10px;
            border-radius: 50%;
            margin-left: auto;
        }

        .online {
            background-color: #007bff;
        }

        .offline {
            background-color: #6c757d;
        }

        .chat-section {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .chat-header {
            background-color: #000000;
            color: white;
            padding: 17px;
            text-align: center;
            font-weight: bold;
            font-size: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            background-color: #f8f9fa;
        }

        .chat-bubble {
            display: inline-block;
            max-width: 70%;
            padding: 12px 16px;
            border-radius: 20px;
            margin-bottom: 15px;
            font-size: 15px;
            color: #333;
            word-wrap: break-word;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .chat-bubble.user {
            background-color: #007bff;
            color: white;
            align-self: flex-end;
            border-radius: 20px 20px 0 20px;
        }

        .chat-bubble.other {
            background-color: #08ec1bba;
            border: 1px solid #ddd;
            align-self: flex-start;
            border-radius: 20px 20px 20px 0;
        }

        .chat-input {
            display: flex;
            padding: 15px;
            border-top: 1px solid #ddd;
            background-color: #f0f0f0;
        }

        .chat-input input {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 30px;
            outline: none;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .chat-input button {
            margin-left: 10px;
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 30px;
            transition: background-color 0.3s;
            font-weight: bold;
        }

        .chat-input button:hover {
            background-color: #0056b3;
        }
    </style>
</head>

<body>


    <div class="chat-container">
        <div class="user-list" id="userList">
            <h5>
                <%= groupName %>
            </h5>

            <% members.forEach(function(member) { %>
                <div class="user" data-status="online">
                    <i class="bi bi-person-circle user-icon"></i>
                    <span>
                        <%= member.name %>
                    </span>
                    <span class="user-status online"></span>
                </div>

                <% }); %>

        </div>


        <div class="chat-section">
            <div class="chat-header">
                Chatroom
            </div>
            <div class="chat-messages d-flex flex-column">
                <% if (messages && messages.length> 0) { %>
                    <% messages.forEach(function(message) { %>
                        <div class="chat-bubble <%= message.sender === studentId ? 'user' : 'other' %>">
                            <strong>
                                <%= message.sender_name %>:
                            </strong>
                            <%= message.content %>
                        </div>
                        <% }); %>
                            <% } else { %>
                                <p class="no-messages">No messages yet. Start the conversation!</p>
                                <% } %>
            </div>


            <!-- Input Area -->
            <div class="chat-input">
                <input type="text" id="message" placeholder="Type a message..." required>
                <button id="sendButton">Send</button>
            </div>
        </div>
    </div>


    <!-- Include Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>

        let refreshInterval;

        // Function to refresh the page
        function refreshPage() {
            location.reload();
        }

        // Function to start auto-refresh
        function startAutoRefresh() {
            if (!refreshInterval) {
                refreshInterval = setInterval(refreshPage, 5000);
                console.log('Auto-refresh started');
            }
        }

        // Function to stop auto-refresh
        function stopAutoRefresh() {
            if (refreshInterval) {
                clearInterval(refreshInterval);
                refreshInterval = null;
                console.log('Auto-refresh stopped');
            }
        }

        // Function to check input and manage refresh
        function checkInput() {
            const messageInput = document.getElementById('message');
            console.log(messageInput.value.trim());
            if (messageInput.value.trim() === '') {
                startAutoRefresh();
            } else {
                stopAutoRefresh();
            }
        }

        // Set up event listeners when page loads
        document.addEventListener('DOMContentLoaded', function () {
            const messageInput = document.getElementById('message');
            const sendButton = document.getElementById('sendButton');

            // Start auto-refresh initially if input is empty
            checkInput();

            // Monitor input changes
            messageInput.addEventListener('input', checkInput);

            // Handle send button click
            sendButton.addEventListener('click', async () => {
                const message = messageInput.value.trim();
                if (message) {
                    try {
                        const response = await fetch('/send-message', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ message }),
                        });
                        const result = await response.json();
                        console.log('Message sent:', result);
                    } catch (error) {
                        console.error('Error sending message:', error);
                    }
                }

                // Clear input and restart auto-refresh
                messageInput.value = '';
                startAutoRefresh();
                refreshPage(); // Immediate refresh after sending
            });
        });

        window.onload = function () {
            console.log('Window loaded'); // Debug log
            const sendButton = document.getElementById('sendButton');
            if (sendButton) {
                sendButton.onclick = function () {
                    console.log('Button clicked (from window.onload)'); // Debug log
                    const message = document.getElementById('message').value.trim();
                    if (message) {
                        console.log('Message to send:', message);
                    }
                    refreshPage();
                };
            }
        };

    </script>
</body>

</html>